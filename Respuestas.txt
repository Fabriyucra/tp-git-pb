4. Dividir el grupo en dos y realizar las siguientes acciones
El primer grupo cambiara el if-else por un switch y el segundo grupo cambiara el orden de las
opciones, por ejemplo cambiando que el 3 sea para la suma y el 1 para multiplicar

5. Realizar un commit y push al repositorio remoto y responder:
¿Qué sucedió cuando se intento hacer el segundo push?
R - La concola no nos permite enviar los cambios del segundo push.

fabricio yucra@DESKTOP-EJGUEBS MINGW64 ~/Practicas (master)
$ git push -u origin master
To https://github.com/Fabriyucra/tp-git-pb.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'https://github.com/Fabriyucra/tp-git-pb.git'

¿Qué acciones hay que tomar antes de realizar el push?
R- La consola nos recomienda actualizar nuestro repositorio local al estado actual del repositorio remoto. 
Por que este sufrio un cambio que no tenemos.

hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
 
 
¿Qué estrategia propondrían para evitar esta situación?

R- Crear un control de las versiones que envian al repositorio remoto, cada participante del proyecto, 
pudiendo ser identificados facilmente con un nombre.

6. En el repositorio local ejecutar el siguiente comando git checkout -b develop

¿Qué acción realiza el parámetro -b?
R- Crea una nueva rama branch. Tambien nos posiciona directo en la rama develop 

fabricio yucra@DESKTOP-EJGUEBS MINGW64 ~/Practicas (master)
$ git checkout -b develop
Switched to a new branch 'develop'

fabricio yucra@DESKTOP-EJGUEBS MINGW64 ~/Practicas (develop)
$
fabricio yucra@DESKTOP-EJGUEBS MINGW64 ~/Practicas (develop)
$ git branch --all
* develop
  master
  remotes/origin/master
(estamos parados en la rama develop)

7. Crear ramas utilizando la recientemente creada develop utilizando los nombres de los desarrolladores

8. Modificar los archivos revirtiendo cambios o realizando mejoras, siempre procurando editar los
métodos y líneas. Ejemplo: separar cada acción (sumar, restar, multiplicar y dividir) en métodos

9. Realizar en el repositorio remoto un merge request
¿Qué diferencias notaron en el proceso?
¿Qué estrategia utilizarían para evitar conflictos?